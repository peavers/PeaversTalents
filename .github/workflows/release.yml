name: Update Version and Tag
on:
  push:
    branches:
      - master

permissions:
  contents: write
  actions: write

jobs:
  update-version-and-tag:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.get_version.outputs.new_version }}
      new_tag: ${{ steps.create_tag.outputs.new_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current version and increment
        id: get_version
        run: |
          # Extract version and ensure it's a complete version number (x.y.z)
          CURRENT_VERSION=$(grep -oP '(?<=## Version: )\d+\.\d+\.\d+' PeaversTalents.toc)

          if [ -z "$CURRENT_VERSION" ] || ! [[ "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format found in TOC file. Must be in format x.y.z"
            exit 1
          fi

          echo "Current version: $CURRENT_VERSION"
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version will be: $NEW_VERSION"

      - name: Update TOC version
        run: |
          # Verify the new version is properly formatted
          if ! [[ "${{ steps.get_version.outputs.new_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: New version is not properly formatted"
            exit 1
          fi

          sed -i "s/^## Version: .*$/## Version: ${{ steps.get_version.outputs.new_version }}/" PeaversTalents.toc

          # Verify the update was successful and complete
          NEW_VERSION_IN_FILE=$(grep -oP '(?<=## Version: )\d+\.\d+\.\d+' PeaversTalents.toc)
          if [ "$NEW_VERSION_IN_FILE" != "${{ steps.get_version.outputs.new_version }}" ]; then
            echo "Error: Version update failed or resulted in incorrect format"
            exit 1
          fi

      - name: Commit TOC changes
        run: |
          git config user.name "Chris Turner"
          git config user.email "peavers@gmail.com"
          git add PeaversTalents.toc
          git commit -m "chore: Update TOC version to ${{ steps.get_version.outputs.new_version }}"
          git push

      - name: Create and push tag
        id: create_tag
        run: |
          NEW_TAG="PeaversTalents-${{ steps.get_version.outputs.new_version }}"
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Trigger packaging workflow
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/peavers/peavers-talents/actions/workflows/packaging.yml/dispatches \
          -d '{"ref":"master"}'
